# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

import os

# Uncomment this to still load settings configured via autoconfig.yml
# config.load_autoconfig()

# Enable JavaScript.  Type: Bool
config.set('content.javascript.enabled', True, 'file://*')
# Enable JavaScript.  Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')
# Enable JavaScript.  Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

config.set('fonts.default_family', "xos4 Terminus") # works for archlinux
config.set('auto_save.interval', 5000)
config.set('auto_save.session', True)
config.set('content.pdfjs', False)
config.set('downloads.location.directory', "~")
config.set('messages.timeout', 30000)
config.set('spellcheck.languages', ["en-US"]) # ..?
config.set('tabs.position', "top")
config.set('content.plugins', True)
config.set('url.default_page', "file:///"+os.environ["HOME"]+"/.config/qutebrowser/void.html")
config.set('url.start_pages', "file:///"+os.environ["HOME"]+"/.config/qutebrowser/void.html")
config.set('editor.command', ["alacritty", "-e", "nvim", "{}"])
config.bind('<Ctrl-e>',"open-editor")
config.set('zoom.default', 120)

# Change 'd' to 'dd', so I won't close it unpurposely while scrolling down with <Ctrl-d>. It's also more Vim-like!
config.bind('dd', "tab-close")
config.unbind('d')

# Unbind C-q to prevent acc. closing qb.
config.unbind('<Ctrl-q>')

# Vim-like experince
config.bind('o',"set-cmd-text -s :open -t" ) ## Open and switch focus to a new tab; by default this is done by 'O'.
config.bind('O',"set-cmd-text -s :open -b") ## Open a new tab; by default this is done by 'xo'.
config.bind('xo',"set-cmd-text -s :open") ## Open a new tab replacing the current one; by default this is done by 'o'.

# Clear History
##config.bind('ch',"history-clear")
config.bind('clear',"spawn --userscript "+os.environ["HOME"]+"/.scripts/qutebrowser-userscripts/backup_and_clear_history")

# User Scripts!
config.bind('aa',"spawn --userscript "+os.environ["HOME"]+"/.scripts/qutebrowser-userscripts/save_for_yta")
config.bind('av',"spawn --userscript "+os.environ["HOME"]+"/.scripts/qutebrowser-userscripts/save_for_ytv")
config.bind(';aa',"hint links userscript "+os.environ["HOME"]+"/.scripts/qutebrowser-userscripts/save_for_yta")
config.bind(';av',"hint links userscript "+os.environ["HOME"]+"/.scripts/qutebrowser-userscripts/save_for_ytv")
config.bind('aw',"spawn bash -c 'vocab -a {primary}' ")
config.bind('wo',"open -b https://www.macmillandictionary.com/dictionary/british/{primary}")
config.bind('track',"spawn --userscript "+os.environ["HOME"]+"/.scripts/qutebrowser-userscripts/tracker")
config.bind('sw', 'spawn --userscript '+os.environ["HOME"]+'/.scripts/qutebrowser-userscripts/search_word')
config.bind('ac', 'spawn --userscript '+os.environ["HOME"]+'/.scripts/qutebrowser-userscripts/add_clip')

# Qute-capture (integrated with org-mode and dmenu)
config.unbind('M')
config.unbind('m')
config.bind('M+',"spawn --userscript "+os.environ["HOME"]+"/.scripts/qutebrowser-userscripts/qute-capture write")
config.bind('M=',"spawn --userscript "+os.environ["HOME"]+"/.scripts/qutebrowser-userscripts/qute-capture read")
config.bind('M-',"spawn --userscript "+os.environ["HOME"]+"/.scripts/qutebrowser-userscripts/qute-capture rm")

# Issue 5178
## https://github.com/qutebrowser/qutebrowser/issues/5178
c.qt.force_software_rendering = 'software-opengl'

# org-roam protocol without javascript
config.bind("<Ctrl-r>", "spawn python "+os.environ["HOME"]+"/.scripts/qutebrowser-userscripts/org-protocol-handler.py \"{url:pretty}\" \"{title}\"")


# base16-qutebrowser (https://github.com/theova/base16-qutebrowser)
# Base16 qutebrowser template by theova
# Gruvbox dark, hard scheme by Dawid Kurek (dawikur@gmail.com), morhetz (https://github.com/morhetz/gruvbox)

base00 = "#1d2021"
base01 = "#3c3836"
base02 = "#504945"
base03 = "#665c54"
base04 = "#bdae93"
base05 = "#d5c4a1"
base06 = "#ebdbb2"
base07 = "#fbf1c7"
base08 = "#fb4934"
base09 = "#fe8019"
base0A = "#fabd2f"
base0B = "#b8bb26"
base0C = "#8ec07c"
base0D = "#83a598"
base0E = "#d3869b"
base0F = "#d65d0e"

# set qutebrowser colors

# Text color of the completion widget. May be a single color to use for
# all columns or a list of three colors, one for each column.
c.colors.completion.fg = base05

# Background color of the completion widget for odd rows.
c.colors.completion.odd.bg = base01

# Background color of the completion widget for even rows.
c.colors.completion.even.bg = base00

# Foreground color of completion widget category headers.
c.colors.completion.category.fg = base0A

# Background color of the completion widget category headers.
c.colors.completion.category.bg = base00

# Top border color of the completion widget category headers.
c.colors.completion.category.border.top = base00

# Bottom border color of the completion widget category headers.
c.colors.completion.category.border.bottom = base00

# Foreground color of the selected completion item.
c.colors.completion.item.selected.fg = base05

# Background color of the selected completion item.
c.colors.completion.item.selected.bg = base0F

# Top border color of the selected completion item.
c.colors.completion.item.selected.border.top = base02

# Bottom border color of the selected completion item.
c.colors.completion.item.selected.border.bottom = base02

# Foreground color of the matched text in the selected completion item.
c.colors.completion.item.selected.match.fg = base0B

# Foreground color of the matched text in the completion.
c.colors.completion.match.fg = base0B

# Color of the scrollbar handle in the completion view.
c.colors.completion.scrollbar.fg = base05

# Color of the scrollbar in the completion view.
c.colors.completion.scrollbar.bg = base00

# Background color of disabled items in the context menu.
c.colors.contextmenu.disabled.bg = base01

# Foreground color of disabled items in the context menu.
c.colors.contextmenu.disabled.fg = base04

# Background color of the context menu. If set to null, the Qt default is used.
c.colors.contextmenu.menu.bg = base00

# Foreground color of the context menu. If set to null, the Qt default is used.
c.colors.contextmenu.menu.fg =  base05

# Background color of the context menu’s selected item. If set to null, the Qt default is used.
c.colors.contextmenu.selected.bg = base0F

# Foreground color of the context menu’s selected item. If set to null, the Qt default is used.
c.colors.contextmenu.selected.fg = base05

# Background color for the download bar.
c.colors.downloads.bar.bg = base00

# Color gradient start for download text.
c.colors.downloads.start.fg = base00

# Color gradient start for download backgrounds.
c.colors.downloads.start.bg = base0D

# Color gradient end for download text.
c.colors.downloads.stop.fg = base00

# Color gradient stop for download backgrounds.
c.colors.downloads.stop.bg = base0C

# Foreground color for downloads with errors.
c.colors.downloads.error.fg = base08

# Font color for hints.
c.colors.hints.fg = base00

# Background color for hints. Note that you can use a `rgba(...)` value
# for transparency.
c.colors.hints.bg = base0A

# Font color for the matched part of hints.
c.colors.hints.match.fg = base05

# Text color for the keyhint widget.
c.colors.keyhint.fg = base05

# Highlight color for keys to complete the current keychain.
c.colors.keyhint.suffix.fg = base05

# Background color of the keyhint widget.
c.colors.keyhint.bg = base00

# Foreground color of an error message.
c.colors.messages.error.fg = base00

# Background color of an error message.
c.colors.messages.error.bg = base08

# Border color of an error message.
c.colors.messages.error.border = base08

# Foreground color of a warning message.
c.colors.messages.warning.fg = base00

# Background color of a warning message.
c.colors.messages.warning.bg = base0E

# Border color of a warning message.
c.colors.messages.warning.border = base0E

# Foreground color of an info message.
c.colors.messages.info.fg = base05

# Background color of an info message.
c.colors.messages.info.bg = base00

# Border color of an info message.
c.colors.messages.info.border = base00

# Foreground color for prompts.
c.colors.prompts.fg = base05

# Border used around UI elements in prompts.
c.colors.prompts.border = base00

# Background color for prompts.
c.colors.prompts.bg = base00

# Background color for the selected item in filename prompts.
c.colors.prompts.selected.bg = base0F

# Foreground color of the statusbar.
c.colors.statusbar.normal.fg = base0B

# Background color of the statusbar.
c.colors.statusbar.normal.bg = base00

# Foreground color of the statusbar in insert mode.
c.colors.statusbar.insert.fg = base00

# Background color of the statusbar in insert mode.
c.colors.statusbar.insert.bg = base0D

# Foreground color of the statusbar in passthrough mode.
c.colors.statusbar.passthrough.fg = base00

# Background color of the statusbar in passthrough mode.
c.colors.statusbar.passthrough.bg = base0C

# Foreground color of the statusbar in private browsing mode.
c.colors.statusbar.private.fg = base00

# Background color of the statusbar in private browsing mode.
c.colors.statusbar.private.bg = base01

# Foreground color of the statusbar in command mode.
c.colors.statusbar.command.fg = base05

# Background color of the statusbar in command mode.
c.colors.statusbar.command.bg = base00

# Foreground color of the statusbar in private browsing + command mode.
c.colors.statusbar.command.private.fg = base05

# Background color of the statusbar in private browsing + command mode.
c.colors.statusbar.command.private.bg = base00

# Foreground color of the statusbar in caret mode.
c.colors.statusbar.caret.fg = base00

# Background color of the statusbar in caret mode.
c.colors.statusbar.caret.bg = base0E

# Foreground color of the statusbar in caret mode with a selection.
c.colors.statusbar.caret.selection.fg = base00

# Background color of the statusbar in caret mode with a selection.
c.colors.statusbar.caret.selection.bg = base0D

# Background color of the progress bar.
c.colors.statusbar.progress.bg = base0D

# Default foreground color of the URL in the statusbar.
c.colors.statusbar.url.fg = base05

# Foreground color of the URL in the statusbar on error.
c.colors.statusbar.url.error.fg = base08

# Foreground color of the URL in the statusbar for hovered links.
c.colors.statusbar.url.hover.fg = base05

# Foreground color of the URL in the statusbar on successful load
# (http).
c.colors.statusbar.url.success.http.fg = base0C

# Foreground color of the URL in the statusbar on successful load
# (https).
c.colors.statusbar.url.success.https.fg = base0B

# Foreground color of the URL in the statusbar when there's a warning.
c.colors.statusbar.url.warn.fg = base0E

# Background color of the tab bar.
c.colors.tabs.bar.bg = base00

# Color gradient start for the tab indicator.
c.colors.tabs.indicator.start = base0D

# Color gradient end for the tab indicator.
c.colors.tabs.indicator.stop = base0C

# Color for the tab indicator on errors.
c.colors.tabs.indicator.error = base08

# Foreground color of unselected odd tabs.
c.colors.tabs.odd.fg = base05

# Background color of unselected odd tabs.
c.colors.tabs.odd.bg = base01

# Foreground color of unselected even tabs.
c.colors.tabs.even.fg = base05

# Background color of unselected even tabs.
c.colors.tabs.even.bg = base00

# Background color of pinned unselected even tabs.
c.colors.tabs.pinned.even.bg = base0C

# Foreground color of pinned unselected even tabs.
c.colors.tabs.pinned.even.fg = base07

# Background color of pinned unselected odd tabs.
c.colors.tabs.pinned.odd.bg = base0B

# Foreground color of pinned unselected odd tabs.
c.colors.tabs.pinned.odd.fg = base07

# Background color of pinned selected even tabs.
c.colors.tabs.pinned.selected.even.bg = base02

# Foreground color of pinned selected even tabs.
c.colors.tabs.pinned.selected.even.fg = base05

# Background color of pinned selected odd tabs.
c.colors.tabs.pinned.selected.odd.bg = base02

# Foreground color of pinned selected odd tabs.
c.colors.tabs.pinned.selected.odd.fg = base05

# Foreground color of selected odd tabs.
c.colors.tabs.selected.odd.fg = base05

# Background color of selected odd tabs.
c.colors.tabs.selected.odd.bg = base0F

# Foreground color of selected even tabs.
c.colors.tabs.selected.even.fg = base05

# Background color of selected even tabs.
c.colors.tabs.selected.even.bg = base0F

# Background color for webpages if unset (or empty to use the theme's
# color).
# c.colors.webpage.bg = base00
